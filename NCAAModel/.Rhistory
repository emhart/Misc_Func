#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
champ.index <- master.out[x,master.out[x,,2]==1,1]
champ.index
master.out[x,,1]
master.out[x,,3]==1
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.index
master.out[x,,]
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,kapchampprior)
cat(x,"/n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),6:7] <- champ.out[i,2:3]}
}
champ.out <- champion.sim(champ.dat,regpriors)
ip bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
champ.out
head(master.out)
dim(master.out)
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]}
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
cat(x,"/n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
}
}
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
cat(x,"\n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
}
}
summed.mat <- matrix(0,nrow=16,ncol=4)
for(x in 1:16){
for(i in 1:4){
summed.mat[x,i] <- sum(master.out[,x,i+1])
}
}
p.mat <- (summed.mat/10)*100
final.output <- cbind(ncaa.dat[1],p.mat)
final.output
p.mat <- (summed.mat/100)*100
p.mat
summed.mat/10
n.sim <- 1000
#The total number of games to simulate to make the fake data based of the probability derived by the log5 rule
#I chose 34 because thats the number of games in a regular season, but we can change this in sensitivity tests
n.games <- 34
#this is the master data array that holds the index value of a team and its record
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
cat(x,"\n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
}
}
#now I can processes the data and create a table with it
summed.mat <- matrix(0,nrow=16,ncol=4)
for(x in 1:16){
for(i in 1:4){
summed.mat[x,i] <- sum(master.out[,x,i+1])
}
}
p.mat <- (summed.mat/1000)*100
final.output <- cbind(ncaa.dat[1],p.mat)
final.output
ncaa.dat <- read.csv("ncaa2012sweet16.csv")
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
cat(x,"\n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
}
}
#now I can processes the data and create a table with it
summed.mat <- matrix(0,nrow=16,ncol=4)
for(x in 1:16){
for(i in 1:4){
summed.mat[x,i] <- sum(master.out[,x,i+1])
}
}
p.mat <- (summed.mat/1000)*100
final.output <- cbind(ncaa.dat[1],p.mat)
final.output
#This function will simulate a division champion
region.sim <- function(bracket.dat,priors) {
#an output matrix that holds the wins as 1 and the losses as 0's
#if a team wins the first round it gets a 1 in column 2, etc...
out.mat <- cbind(bracket.dat$index,matrix(0,nrow=4,ncol=2))
#First I set up the loop to cover all the rounds of each division
#in this case 4 rounds to establish a champion
for(i in 1:2){
#next I can get the number of games from the position code in the file
div.games <- max(unique(bracket.dat$position)) #to start this is 8
for(j in 1:div.games){
#first I need to figure out the index of the two teams playing
#Now I simulate 34 games between the first team
opponents.ratings <- bracket.dat[bracket.dat[,7]==j,2]
index <- bracket.dat[bracket.dat[,7]==j,8]
#first I get my point estimate of theta
theta <- l5rule(opponents.ratings)
#now I simulate the odds of team A beating team B
game.sim <- rbinom(n.games,1,theta)
#now I randomly draw from the posterior distribution of this game given my simulated data
#and my priors (set to 1,1)
#I calculate the number of wins and losses
s <- length(which(game.sim==1))
f <- length(which(game.sim==0))
#Then I add my prior information
# I have two sources of prior info detailed above
# I will calculate each one and then take the average
p1 <-  bracket.dat[bracket.dat[,7]==j,4]
beta1 <-  calc.priors(p1,priors1,flat=T)
p2 <-  bracket.dat[bracket.dat[,7]==j,5]
beta2 <- calc.priors(p2,priors2,flat=T)
a <- mean(c(beta1[1],beta2[1]))
b <- mean(c(beta1[2],beta2[2]))
#now I'll take a single random draw from  my posterior beta distribution
outcome <- rbinom(1,1,rbeta(1,a+s,b+f))
#record the outcome in the output matrix
if(outcome==1){out.mat[which(out.mat[,1]==index[1]),i+1]<-1}
if(outcome==0){out.mat[which(out.mat[,1]==index[2]),i+1]<-1}
}
#now I need to readjust the bracket positions  for the first three rounds
if(i < 2){
#subset out the winners
winners <- out.mat[out.mat[,i+1]>0,1]
bracket.dat <- bracket.dat[bracket.dat[,8]%in%winners,]
#reorder the bracket by position and then re assign position numbers
bracket.dat <- bracket.dat[order(bracket.dat$position),]
bracket.dat$position <- posassign(bracket.dat$position)
}
}
return(out.mat)}
champion.sim <- function(bracket.dat,priors)  {
#this function works the same as a region but the only difference are the priors
# and the size of the output matrix
#an output matrix that holds the wins as 1 and the losses as 0's
#if a team wins the first round it gets a 1 in column 2, etc...
out.mat <- cbind(bracket.dat$index,matrix(0,nrow=4,ncol=2))
#First I set up the loop to cover all the rounds of each division
#in this case 4 rounds to establish a champion
for(i in 1:2){
#next I can get the number of games from the position code in the file
div.games <- max(unique(bracket.dat$position)) #to start this is 8
for(j in 1:div.games){
#first I need to figure out the index of the two teams playing
#Now I simulate 34 games between the first team
opponents.ratings <- bracket.dat[bracket.dat[,7]==j,2]
index <- bracket.dat[bracket.dat[,7]==j,8]
#first I get my point estimate of theta
theta <- l5rule(opponents.ratings)
#now I simulate the odds of team A beating team B
game.sim <- rbinom(n.games,1,theta)
#now I randomly draw from the posterior distribution of this game given my simulated data
#and my priors (set to 1,1)
#I calculate the number of wins and losses
s <- length(which(game.sim==1))
f <- length(which(game.sim==0))
#Then I add my prior information
p1 <-  bracket.dat[bracket.dat[,7]==j,4]
beta1 <-  calc.priors(p1,priors1,flat=T)
p2 <-  bracket.dat[bracket.dat[,7]==j,5]
beta2 <- calc.priors(p2,priors2,flat=T)
a <- mean(c(beta1[1],beta2[1]))
b <- mean(c(beta1[2],beta2[2]))
#now I'll take a single random draw from  my posterior beta distribution
outcome <- rbinom(1,1,rbeta(1,a+s,b+f))
#record the outcome in the output matrix
if(outcome==1){out.mat[which(out.mat[,1]==index[1]),i+1]<-1}
if(outcome==0){out.mat[which(out.mat[,1]==index[2]),i+1]<-1}
}
#now I need to readjust the bracket positions  for the first three rounds
if(i < 2){
#subset out the winners
winners <- out.mat[out.mat[,i+1]>0,1]
bracket.dat <- bracket.dat[bracket.dat[,8]%in%winners,]
#reorder the bracket by position and then re assign position numbers
bracket.dat <- bracket.dat[order(bracket.dat$position),]
bracket.dat$position <- posassign(bracket.dat$position)
}
}
return(out.mat)}
#this is the master data array that holds the index value of a team and its record
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
cat(x,"\n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
}
}
#now I can processes the data and create a table with it
summed.mat <- matrix(0,nrow=16,ncol=4)
for(x in 1:16){
for(i in 1:4){
summed.mat[x,i] <- sum(master.out[,x,i+1])
}
}
p.mat <- (summed.mat/1000)*100
final.output <- cbind(ncaa.dat[1],p.mat)
final.output
#This function will simulate a division champion
region.sim <- function(bracket.dat,priors) {
#an output matrix that holds the wins as 1 and the losses as 0's
#if a team wins the first round it gets a 1 in column 2, etc...
out.mat <- cbind(bracket.dat$index,matrix(0,nrow=4,ncol=2))
#First I set up the loop to cover all the rounds of each division
#in this case 4 rounds to establish a champion
for(i in 1:2){
#next I can get the number of games from the position code in the file
div.games <- max(unique(bracket.dat$position)) #to start this is 8
for(j in 1:div.games){
#first I need to figure out the index of the two teams playing
#Now I simulate 34 games between the first team
opponents.ratings <- bracket.dat[bracket.dat[,7]==j,2]
index <- bracket.dat[bracket.dat[,7]==j,8]
#first I get my point estimate of theta
theta <- l5rule(opponents.ratings)
#now I simulate the odds of team A beating team B
game.sim <- rbinom(n.games,1,theta)
#now I randomly draw from the posterior distribution of this game given my simulated data
#and my priors (set to 1,1)
#I calculate the number of wins and losses
s <- length(which(game.sim==1))
f <- length(which(game.sim==0))
#Then I add my prior information
# I have two sources of prior info detailed above
# I will calculate each one and then take the average
p1 <-  bracket.dat[bracket.dat[,7]==j,4]
beta1 <-  calc.priors(p1,priors1,flat=F)
p2 <-  bracket.dat[bracket.dat[,7]==j,5]
beta2 <- calc.priors(p2,priors2,flat=F)
a <- mean(c(beta1[1],beta2[1]))
b <- mean(c(beta1[2],beta2[2]))
#now I'll take a single random draw from  my posterior beta distribution
outcome <- rbinom(1,1,rbeta(1,a+s,b+f))
#record the outcome in the output matrix
if(outcome==1){out.mat[which(out.mat[,1]==index[1]),i+1]<-1}
if(outcome==0){out.mat[which(out.mat[,1]==index[2]),i+1]<-1}
}
#now I need to readjust the bracket positions  for the first three rounds
if(i < 2){
#subset out the winners
winners <- out.mat[out.mat[,i+1]>0,1]
bracket.dat <- bracket.dat[bracket.dat[,8]%in%winners,]
#reorder the bracket by position and then re assign position numbers
bracket.dat <- bracket.dat[order(bracket.dat$position),]
bracket.dat$position <- posassign(bracket.dat$position)
}
}
return(out.mat)}
champion.sim <- function(bracket.dat,priors)  {
#this function works the same as a region but the only difference are the priors
# and the size of the output matrix
#an output matrix that holds the wins as 1 and the losses as 0's
#if a team wins the first round it gets a 1 in column 2, etc...
out.mat <- cbind(bracket.dat$index,matrix(0,nrow=4,ncol=2))
#First I set up the loop to cover all the rounds of each division
#in this case 4 rounds to establish a champion
for(i in 1:2){
#next I can get the number of games from the position code in the file
div.games <- max(unique(bracket.dat$position)) #to start this is 8
for(j in 1:div.games){
#first I need to figure out the index of the two teams playing
#Now I simulate 34 games between the first team
opponents.ratings <- bracket.dat[bracket.dat[,7]==j,2]
index <- bracket.dat[bracket.dat[,7]==j,8]
#first I get my point estimate of theta
theta <- l5rule(opponents.ratings)
#now I simulate the odds of team A beating team B
game.sim <- rbinom(n.games,1,theta)
#now I randomly draw from the posterior distribution of this game given my simulated data
#and my priors (set to 1,1)
#I calculate the number of wins and losses
s <- length(which(game.sim==1))
f <- length(which(game.sim==0))
#Then I add my prior information
p1 <-  bracket.dat[bracket.dat[,7]==j,4]
beta1 <-  calc.priors(p1,priors1,flat=F)
p2 <-  bracket.dat[bracket.dat[,7]==j,5]
beta2 <- calc.priors(p2,priors2,flat=F)
a <- mean(c(beta1[1],beta2[1]))
b <- mean(c(beta1[2],beta2[2]))
#now I'll take a single random draw from  my posterior beta distribution
outcome <- rbinom(1,1,rbeta(1,a+s,b+f))
#record the outcome in the output matrix
if(outcome==1){out.mat[which(out.mat[,1]==index[1]),i+1]<-1}
if(outcome==0){out.mat[which(out.mat[,1]==index[2]),i+1]<-1}
}
#now I need to readjust the bracket positions  for the first three rounds
if(i < 2){
#subset out the winners
winners <- out.mat[out.mat[,i+1]>0,1]
bracket.dat <- bracket.dat[bracket.dat[,8]%in%winners,]
#reorder the bracket by position and then re assign position numbers
bracket.dat <- bracket.dat[order(bracket.dat$position),]
bracket.dat$position <- posassign(bracket.dat$position)
}
}
return(out.mat)}
ncaa.dat <- read.csv("ncaa2012sweet16.csv")
nboot <- 10000
#this is the master data array that holds the index value of a team and its record
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
cat(x,"\n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
}
}
#now I can processes the data and create a table with it
summed.mat <- matrix(0,nrow=16,ncol=4)
for(x in 1:16){
for(i in 1:4){
summed.mat[x,i] <- sum(master.out[,x,i+1])
}
}
nboot
n.sim <- 10000
#this is the master data array that holds the index value of a team and its record
master.out<- array(0,c(n.sim,16,5))
#this is the array to hold all the region tournament results
region.out <- array(0,c(4,n.sim,4,3))
#I set my priors here
for(x in 1:n.sim){
for(i in 1:4){
#first we simulate each region
#we subset the original data set
bracket.dat <- subset(ncaa.dat,ncaa.dat$region==i)
region.out[i,x,,] <- region.sim(bracket.dat,regprior)
}
#next I put the regional data into the master data set and create the championship bracket
master.out[x,1:4,1:3] <- region.out[1,x,,]
master.out[x,5:8,1:3] <- region.out[2,x,,]
master.out[x,9:12,1:3] <- region.out[3,x,,]
master.out[x,13:16,1:3] <- region.out[4,x,,]
#now I will create the championship bracket
champ.index <- master.out[x,master.out[x,,3]==1,1]
champ.dat <- ncaa.dat[ncaa.dat[,8]%in%champ.index,]
champ.dat <- champ.dat[order(champ.dat$region),]
champ.dat$position <- posassign(champ.dat$position)
champ.out <- champion.sim(champ.dat,regpriors)
cat(x,"\n")
for(i in 1:4){
master.out[x,which(champ.out[i,1] == master.out[x,,1]),4:5] <- champ.out[i,2:3]
}
}
#now I can processes the data and create a table with it
summed.mat <- matrix(0,nrow=16,ncol=4)
for(x in 1:16){
for(i in 1:4){
summed.mat[x,i] <- sum(master.out[,x,i+1])
}
}
p.mat <- (summed.mat/10000)*100
final.output <- cbind(ncaa.dat[1],p.mat)
final.output
